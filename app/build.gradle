apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'


// Initialize the keystore credentials from the keystore.properties file
def filename = "keystore.properties"
def keystoreProperties = new Properties()

// Substitute with template if no configuration exists
if (!file(filename).exists()) {
    filename += ".template"
}
keystoreProperties.load(new FileInputStream(rootProject.file(filename)))

android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    compileSdkVersion 29
    defaultConfig {
        // Update this every build
        versionCode 16
        versionName "Beta 1.3"
        multiDexEnabled true
        applicationId "com.cradleVSA.neptune"
        minSdkVersion 17    // Android 4.2
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        // Blur-Effect library
        renderscriptTargetApi 24
        renderscriptSupportModeEnabled true

        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    buildToolsVersion = '29.0.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    //ui test
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.android.support:multidex:1.0.3'

    // Dagger: Dependency Injection framework.
    implementation 'com.google.dagger:dagger-android:2.20'
    implementation 'com.google.dagger:dagger-android-support:2.20'
    kapt 'com.google.dagger:dagger-android-processor:2.20'
    kapt 'com.google.dagger:dagger-compiler:2.20'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Time: Backport of Java 8's interfaces for Android
    // https://github.com/JakeWharton/ThreeTenABP
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.0'

    // GSON
    implementation 'com.google.code.gson:gson:2.8.5'

    // Preferences
    implementation 'androidx.preference:preference:1.1.0'

    // Material Design
    implementation 'com.google.android.material:material:1.1.0'

    // TensorFlow (for OCR of CRADLE screen)
//    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-lite:1.14.0'

    // Blur
    implementation 'com.wonderkiln:blurkit:1.0.0'

    // Volley (networking)
    implementation 'com.android.volley:volley:1.1.1'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // junit 5 unit testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.0"

    // JSON library for testing
    //   The actual one is baked into the Android SDK so it fails if we try to test it
    testImplementation "org.json:json:20200518"

    // A different version of this library for testing. The one used for the actual
    // application must be initialized before it can be used which we can't do when
    // testing hence this other version.
    testImplementation "org.threeten:threetenbp:1.3.8"

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.22.0'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'

    // Kotlin version of mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta01'
    implementation 'com.google.firebase:firebase-perf:19.0.5'
    implementation 'com.google.firebase:firebase-storage:19.1.1'

    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'

    //room database
    implementation "androidx.room:room-runtime:2.2.5"
    kapt 'android.arch.persistence.room:compiler:1.1.1'

    // Guava - for immutable maps
    implementation "com.google.guava:guava:16+"
    implementation "androidx.core:core-ktx:+"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

// TensorFlow Lite: select only the ABI's we (likely) need
android {
    defaultConfig {
        ndk {
            // x86 just for emulator
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64', 'x86'
        }
    }
}
repositories {
    mavenCentral()
}
